[
    {
        "img": {
            "src": "/static/img/main-demo.png",
            "alt": "Common main method for Minestom servers"
        },
        "title": "Introduction",
        "paragraphs": [
            "A complete rewrite of Minecraft server software, <strong>open-source</strong> and <strong>without any code from Mojang</strong>.",
            "The main difference from default Minecraft is that Minestom does not contain any features by default. However, we have a complete API that allows you to make anything possible with extensions, similar to how plugins and mods work."
        ],
        "warn": "This is a developer API; It is not meant to be used by the end-users.",
        "error": "Replacing Bukkit/Forge/Sponge with this <strong>will not work</strong> since we do not implement any of their APIs."
    },
    {
        "img": {
            "src": "/static/img/create_instance.png",
            "alt": "Usage of Instances"
        },
        "title": "Instances",
        "paragraphs": [
            "Worlds in default Minecraft are great for playing with friends, but scaling them up can be unmanageable. The best examples of this can be found in minigames; it's hard to separate worlds properly and all worlds are saved in files. Plus, there's a lot of overhead caused by unnecessary data contained in them.",
            "Instances are our lightweight solution to it. You can copy and send them to another player in no time, create a serializer, decide if they're saved in memory only, and more.",
            "Being able to create instances on the go is a must-have that can help push many more projects forward.",
            "Instances also come with performance benefits. Unlike other implementations of worlds that may be fully singlethreaded or use one thread per world, Minestom uses a set number of threads (a thread pool) to manage chunks independently from instances so that lag can be reduced."
        ],
        "wiki": {
            "path": "/world/instances",
            "text": "Find out more about instances on the wiki"
        }
    },
    {
        "img": {
            "src": "/static/img/block.png",
            "alt": "Example usage of BlockHandler"
        },
        "title": "Blocks",
        "paragraphs": [
            "By default, Minestom doesn't know what a chest is. You have to tell the server to open an inventory when someone clicks on it. Every one of these special blocks (a block that isn't only visual) has to be registered, but after that, they can just be placed in the world.",
            "However, all blocks are visually there, and you only need to add functionality."
        ],
        "wiki": {
            "path": "/world/blocks",
            "text": "Find out more about blocks on the wiki"
        }
    },
    {
        "img": {
            "src": "/static/img/create_chicken.png",
            "alt": "Creating a new chicken entity"
        },
        "title": "Entities",
        "paragraphs": [
            "The terms \"passive\" or \"aggressive\" mobs do not exist. Nobody forbids you from making a flying chicken that rushes at any players that come too close. Doing this with NMS is a mess because of obfuscation and the large inheritance, but it's easy with Minestom."
        ],
        "wiki": {
            "path": "/feature/entities",
            "text": "Find out more about entities on the wiki"
        }
    },
    {
        "img": {
            "src": "/static/img/inventory.png",
            "alt": "Opening a single-row inventory"
        },
        "title": "Inventories",
        "paragraphs": [
            "Inventories have evolved a lot from just being storage containers. They are often used as a client&lt;-&gt;server interface with clickable items and callbacks. Minestom supports it natively without having to program all the basic stuff yourself!"
        ],
        "wiki": {
            "path": "/feature/inventories",
            "text": "Find out more about inventories on the wiki"
        }
    },
    {
        "img": {
            "src": "/static/img/command.png",
            "alt": "The PotionCommand from the demo server"
        },
        "title": "Commands",
        "paragraphs": [
            "Commands are the simplest way of communication between clients and server. In 1.13, Minecraft started using a new library for commands named Brigadier. Minestom has integrated an API that allows you to use the features it adds."
        ],
        "wiki": {
            "path": "/feature/commands",
            "text": "Find out more about commands on the wiki"
        }
    }
]